{"version":3,"file":"static/js/786.2c444fc5.chunk.js","mappings":"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","sources":["Resources/View/Components/Chart/ChartDailySales.jsx","Resources/View/Pages/Home/Section/ChartDailySales.jsx","Resources/View/Components/Chart/ComparisonSales.jsx","Resources/View/Pages/Home/Section/ChartComparisonSales.jsx","Resources/View/Components/Table/Table.jsx","Resources/Function/FunctionGetAllProduct.jsx","Resources/Function/FunctionFilterProduct.jsx","Resources/View/Pages/Home/Section/TableSales.jsx","Resources/View/Pages/Home/DashBoard.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { BarChart, Bar, XAxis, Brush, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from \"recharts\";\nimport { getAllSales } from \"../../../../Api/MainApi\";\n\nimport \"../../../Style/Components/Chart/Chart.css\";\nimport \"../../../Style/Pages/Home/DashBoard.css\";\n\nfunction ChartDailySales({ selectedProduct }) {\n  const [salesData, setSalesData] = useState([]);\n\n  useEffect(() => {\n    fetchData();\n  }, [selectedProduct]);\n\n  const fetchData = async () => {\n    try {\n      const data = await getAllSales();\n\n      if (selectedProduct === \"all\") {\n        setSalesData(data);\n        return;\n      }\n\n      const filteredData = selectedProduct ? data.filter((item) => item.product === selectedProduct) : data;\n      setSalesData(filteredData);\n    } catch (error) {\n      console.error(\"Error fetching data\", error);\n    }\n  };\n\n  return (\n    <div className=\"ChartContainer\">\n      <h5>Grafik Penjualan Harian</h5>\n      <ResponsiveContainer width=\"100%\" height={400}>\n        <BarChart\n          data={salesData}\n          margin={{\n            top: 20,\n            right: 30,\n            left: 20,\n            bottom: 5,\n          }}\n        >\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"date\" />\n          <YAxis />\n          <Tooltip />\n          <Legend />\n          <Bar dataKey=\"sales\" stackId=\"a\" fill=\"#8884d8\" />\n          <Bar dataKey=\"revenue\" stackId=\"a\" fill=\"#82ca9d\" />\n          <Brush />\n        </BarChart>\n      </ResponsiveContainer>\n    </div>\n  );\n}\n\nexport default ChartDailySales;\n","import React from \"react\";\n\nimport \"../../../../Style/Pages/Home/DashBoard.css\";\nimport ChartDailySales from \"../../../Components/Chart/ChartDailySales\";\n\nfunction ChartChartDailySalesDashBoard({ selectedProduct }) {\n  return (\n    <div className=\"ChartDailySalesDashBoard\">\n      <div className=\"ChartDailySalesDashBoardContainer\">\n        <div className=\"ChartDailySalesDashBoardContent\">\n          <div className=\"Box-ChartDailySalesDashBoard\">\n            <ChartDailySales selectedProduct={selectedProduct} />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ChartChartDailySalesDashBoard;\n","import React, { useEffect, useState } from \"react\";\nimport { ResponsiveContainer, Brush, Area, ComposedChart, Line, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from \"recharts\";\nimport { getAllSales } from \"../../../../Api/MainApi\";\n\nimport \"../../../Style/Components/Chart/Chart.css\";\nimport \"../../../Style/Pages/Home/DashBoard.css\";\n\nfunction ComparisonSales({ selectedProduct }) {\n  const [salesData, setSalesData] = useState([]);\n\n  useEffect(() => {\n    fetchData();\n  }, [selectedProduct]);\n\n  const fetchData = async () => {\n    try {\n      const data = await getAllSales();\n      if (selectedProduct === \"all\") {\n        setSalesData(data);\n        return;\n      }\n\n      const filteredData = selectedProduct ? data.filter((item) => item.product === selectedProduct) : data;\n\n      const sortedData = filteredData.sort((a, b) => a.sales - b.sales);\n\n      setSalesData(sortedData);\n    } catch (error) {\n      console.error(\"Error fetching data\", error);\n    }\n  };\n\n  return (\n    <div className=\"ChartContainer\">\n      <h5>Pembandingan Penjualan</h5>\n      <ResponsiveContainer width=\"100%\" height={400}>\n        <ComposedChart\n          data={salesData}\n          // syncId=\"anyId\"\n          margin={{\n            top: 20,\n            right: 30,\n            left: 20,\n            bottom: 5,\n          }}\n        >\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"product\" />\n          <YAxis />\n          <Tooltip />\n          <Legend />\n          <Area type=\"monotone\" dataKey=\"sales\" fill=\"#8884d8\" stroke=\"#8884d8\" />\n          <Bar dataKey=\"sales\" stackId=\"a\" fill=\"#0c64a2\" />\n          <Line type=\"monotone\" dataKey=\"revenue\" stroke=\"#82ca9d\" />\n          <Brush />\n        </ComposedChart>\n      </ResponsiveContainer>\n    </div>\n  );\n}\n\nexport default ComparisonSales;\n","import React from \"react\";\n\nimport \"../../../../Style/Pages/Home/DashBoard.css\";\nimport ComparisonSales from \"../../../Components/Chart/ComparisonSales\";\n\nfunction ChartComparisonSalesDashBoard({ selectedProduct }) {\n  return (\n    <div className=\"ChartDailySalesDashBoard\">\n      <div className=\"ChartDailySalesDashBoardContainer\">\n        <div className=\"ChartDailySalesDashBoardContent\">\n          <div className=\"Box-ChartDailySalesDashBoard\">\n            <ComparisonSales selectedProduct={selectedProduct} />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ChartComparisonSalesDashBoard;\n","import React from \"react\";\nimport { GetAllProduct } from \"../../../Function/FunctionGetAllProduct\";\nimport { FilterProduct } from \"../../../Function/FunctionFilterProduct\";\nimport \"../../../Style/Pages/Home/DashBoard.css\";\n\nconst TableComponent = () => {\n  const { salesData } = GetAllProduct();\n  const { filteredData, filter, setFilter } = FilterProduct(salesData);\n\n  const handleFilterChange = (event) => {\n    setFilter(event.target.value);\n  };\n\n  const totalRevenue = salesData.reduce((total, item) => total + item.revenue, 0);\n\n  const totalSales = salesData.reduce((total, item) => total + item.sales, 0);\n\n  const productWithHighestRevenue = salesData.sort((a, b) => b.revenue - a.revenue)[0]?.product;\n\n  return (\n    <div className=\"TableContainer\">\n      <div className=\"TableContent\">\n        <h5 className=\"TableContent-Left\">Table Penjualan</h5>\n        <div className=\"TableContent-Right\">\n          <label htmlFor=\"product\">Filter Table: </label>\n          <select className=\"FilterTable\" id=\"FilterTable\" value={filter} onChange={handleFilterChange}>\n            <option value=\"\">Pilih Filter</option>\n            <option value=\"Descending\">Descending Sales</option>\n            <option value=\"Ascending\">Ascending Sales</option>\n            <option value=\"AtoZ\">A to Z</option>\n            <option value=\"ZtoA\">Z to A</option>\n          </select>\n        </div>\n      </div>\n      {filteredData && filteredData.length > 0 ? (\n        <>\n          <table>\n            <thead>\n              <tr>\n                <th>ID</th>\n                <th>Product</th>\n                <th>Date</th>\n                <th>Sales</th>\n                <th>Revenue</th>\n              </tr>\n            </thead>\n            <tbody>\n              {filteredData.map((sale) => (\n                <tr key={sale.id}>\n                  <td>{sale.id}</td>\n                  <td>{sale.product}</td>\n                  <td>{sale.date}</td>\n                  <td>\n                    <b>${sale.sales}</b>\n                  </td>\n                  <td>\n                    <b>${sale.revenue}</b>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </>\n      ) : (\n        <p>Loading...</p>\n      )}\n      <div className=\"TableContent-RightBottom\">\n        <h5>\n          Best Seller <b>{productWithHighestRevenue}</b>\n        </h5>\n        <h5>\n          Total Sales <b>${totalSales.toFixed(2)}</b>\n        </h5>\n        <h5>\n          Total Revenue <b>${totalRevenue.toFixed(2)}</b>\n        </h5>\n      </div>\n    </div>\n  );\n};\n\nexport default TableComponent;\n","import { useState, useEffect } from \"react\";\nimport { getAllSales } from \"../../Api/MainApi\";\n\nexport const GetAllProduct = () => {\n  const [salesData, setSalesData] = useState([]);\n  const [products, setProducts] = useState([]);\n  const [selectedProduct, onSelectProduct] = useState(\"\");\n\n  useEffect(() => {\n    fetchComparisonSales();\n  }, [selectedProduct]);\n\n  const fetchComparisonSales = async () => {\n    try {\n      const data = await getAllSales();\n      console.log(\"Fetched sales data:\", data);\n\n      const filteredData = selectedProduct ? data.filter((item) => item.product === selectedProduct) : data;\n\n      const sortedData = filteredData.sort((a, b) => a.sales - b.sales);\n\n      setSalesData(sortedData);\n    } catch (error) {\n      console.error(\"Error fetching data\", error);\n    }\n  };\n\n  useEffect(() => {\n    fetchDailySales();\n  }, [selectedProduct]);\n\n  const fetchDailySales = async () => {\n    try {\n      const data = await getAllSales();\n      console.log(\"Fetched sales data:\", data);\n\n      const filteredData = selectedProduct ? data.filter((item) => item.product === selectedProduct) : data;\n      setSalesData(filteredData);\n    } catch (error) {\n      console.error(\"Error fetching data\", error);\n    }\n  };\n\n  const handleSelectProduct = (product) => {\n    onSelectProduct(product);\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const fetchData = async () => {\n    try {\n      const data = await getAllSales();\n      setSalesData(data);\n    } catch (error) {\n      console.error(\"Error fetching sales data\", error);\n    }\n  };\n\n  return { salesData, products };\n};\n","import { useState, useEffect } from \"react\";\n\nexport const FilterProduct = (salesData, initialFilter = \"\") => {\n  const [filteredData, setFilteredData] = useState([]);\n  const [filter, setFilter] = useState(initialFilter);\n\n  useEffect(() => {\n    filterData();\n  }, [filter, salesData]);\n\n  const filterData = () => {\n    let sortedData = [...salesData];\n\n    // Urutkan data berdasarkan ID secara default\n    sortedData.sort((a, b) => a.id - b.id);\n\n    if (filter === \"Descending\") {\n      sortedData.sort((a, b) => b.revenue - a.revenue);\n    } else if (filter === \"Ascending\") {\n      sortedData.sort((a, b) => a.revenue - b.revenue);\n    } else if (filter === \"AtoZ\") {\n      sortedData.sort((a, b) => a.product.localeCompare(b.product));\n    } else if (filter === \"ZtoA\") {\n      sortedData.sort((a, b) => b.product.localeCompare(a.product));\n    }\n\n    setFilteredData(sortedData);\n  };\n\n  return { filteredData, filter, setFilter };\n};\n","import React from \"react\";\n\nimport \"../../../../Style/Pages/Home/DashBoard.css\";\nimport TableSales from \"../../../Components/Table/Table\";\n\nfunction TableSalesDashboard() {\n  return (\n    <div className=\"TableSalesDashBoard\">\n      <div className=\"TableSalesDashBoardContainer\">\n        <div className=\"TableSalesDashBoardContent\">\n          <div className=\"Box-TableSalesDashBoard\">\n            <TableSales />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default TableSalesDashboard;\n","import \"../../../Style/Pages/Home/DashBoard.css\";\n\nimport ChartDailySalesDashBoard from \"./Section/ChartDailySales.jsx\";\nimport ChartComparisonSalesDashBoard from \"./Section/ChartComparisonSales.jsx\";\nimport TableSalesDashboard from \"./Section/TableSales.jsx\";\n\nfunction DashBoard({ selectedProduct }) {\n  return (\n    <main id=\"MainDashBoard\">\n      <section className=\"MainDashBoard\">\n        <div className=\"Dashboard\">\n          <div className=\"DashBoardContainer\">\n            <div className=\"DashBoardContent\">\n              {/* Start Navbar   */}\n\n              {/* Start Sales Chart */}\n              <section className=\"MainChartDailySalesDashBoard\">\n                <ChartDailySalesDashBoard selectedProduct={selectedProduct} />\n              </section>\n              {/* End Sales Chart */}\n\n              {/* Start Sales Chart */}\n              <section className=\"MainChartComparisonSalesDashBoard\">\n                <ChartComparisonSalesDashBoard selectedProduct={selectedProduct} />\n              </section>\n              {/* End Sales Chart */}\n\n              {/* Start Sales Chart */}\n              <section className=\"MainTableSalesDashboard\">\n                <TableSalesDashboard />\n              </section>\n              {/* End Sales Chart */}\n            </div>\n          </div>\n        </div>\n      </section>\n    </main>\n  );\n}\n\nexport default DashBoard;\n"],"names":["_ref","selectedProduct","salesData","setSalesData","useState","useEffect","fetchData","async","data","getAllSales","filteredData","filter","item","product","error","console","_jsxs","className","children","_jsx","ResponsiveContainer","width","height","BarChart","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","Legend","Bar","stackId","fill","Brush","ChartDailySales","sortedData","sort","a","b","sales","ComposedChart","Area","type","stroke","Line","ComparisonSales","TableComponent","_salesData$sort$","GetAllProduct","products","setProducts","onSelectProduct","fetchComparisonSales","log","fetchDailySales","setFilter","initialFilter","arguments","length","undefined","setFilteredData","filterData","id","revenue","localeCompare","FilterProduct","totalRevenue","reduce","total","totalSales","productWithHighestRevenue","htmlFor","value","onChange","event","target","_Fragment","map","sale","date","toFixed","TableSales","ChartDailySalesDashBoard","ChartComparisonSalesDashBoard","TableSalesDashboard"],"sourceRoot":""}